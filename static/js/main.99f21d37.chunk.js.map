{"version":3,"sources":["store.js","components/Text.js","components/CustomMaterial.js","blocks.js","components/Plane.js","index.js"],"names":["state","sections","pages","zoom","paragraphs","offset","factor","header","image","aspect","text","stripes","color","height","diamonds","x","pos","Vector3","scale","top","createRef","Text","children","size","left","right","bottom","opacity","layers","font","props","data","useLoader","FontLoader","geom","usePromise","Promise","res","TextBufferGeometry","curveSegments","onUpdate","useCallback","self","box","geometry","computeBoundingBox","boundingBox","getSize","position","y","ref","useRef","last","current","useFrame","shift","lerp","frustumCulled","attach","transparent","MultilineText","lineHeight","split","map","index","key","CustomMaterial","vertexShader","fragmentShader","uniforms","texture","value","hasTexture","Color","this","ShaderMaterial","extend","offsetContext","createContext","Block","useBlock","parentOffset","sectionHeight","undefined","curY","curTop","Provider","useThree","viewport","useContext","viewportWidth","width","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor","Plane","forwardRef","args","material","Startup","Paragraph","w","alignRight","pixelWidth","style","textAlign","tabIndex","Content","images","TextureLoader","useMemo","forEach","minFilter","LinearFilter","rotation","Math","PI","className","ReactDOM","render","scrollArea","onScroll","e","target","scrollTop","useEffect","concurrent","pixelRatio","orthographic","camera","fallback","center","Array","fill","_","id","document","getElementById"],"mappings":"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","file":"static/js/main.99f21d37.chunk.js","sourcesContent":["import { createRef } from \"react\"\nimport { Vector3 } from \"three\"\n\nconst state = {\n  sections: 4,\n  pages: 3,\n  zoom: 75,\n  paragraphs: [\n    {\n      offset: 1,\n      factor: 1.75,\n      header: \"NMT-React\",\n      image: \"/nmtReactPreview.png\",\n      aspect: 1.46,\n      text: \"This tool based on a Neural Machine Translation technology will help you translate English to German. The frontend uses ReactJS to dynamically render the DOM and Bootstrap to make the website responsive. The backend is written in Python using Flask to easily define the endpoints. The machine learning model was built using TensorFlow and OpenNMT.\"\n    },\n    {\n      offset: 2,\n      factor: 2.6,\n      header: \"Coming Soon ...\",\n      image: \"/coming-soon.png\",\n      aspect: 1.7,\n      text:\n        \"More projects comming soon\"\n    }\n  ],\n  stripes: [\n    { offset: 0, color: \"#000\", height: 13 }\n  ],\n  diamonds: [\n    { x: 0, offset: 0.22, pos: new Vector3(), scale: 0.6, factor: 1.8 },\n    { x: 2, offset: 1.1, pos: new Vector3(), scale: 0.8, factor: 2.1 },\n    { x: -5, offset: 2, pos: new Vector3(), scale: 0.8, factor: 2.5 },\n    { x: 0, offset: 2.8, pos: new Vector3(), scale: 0.8, factor: 6 }\n  ],\n  top: createRef()\n}\n\nexport default state\n","import { FontLoader, Vector3, TextBufferGeometry } from \"three\"\nimport React, { useCallback, useRef } from \"react\"\nimport { useLoader, useFrame } from \"react-three-fiber\"\nimport usePromise from \"react-promise-suspense\"\nimport lerp from \"lerp\"\nimport state from \"../store\"\n\nfunction Text({ children, size = 1, left, right, top, bottom, color = \"white\", opacity = 1, height = 0.01, layers = 0, font = \"/MOONGET_Heavy.blob\", ...props }) {\n  const data = useLoader(FontLoader, font)\n  const geom = usePromise(() => new Promise(res => res(new TextBufferGeometry(children, { font: data, size: 1, height, curveSegments: 32 }))), [children])\n  const onUpdate = useCallback(\n    self => {\n      const box = new Vector3()\n      self.geometry.computeBoundingBox()\n      self.geometry.boundingBox.getSize(box)\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2\n    },\n    [left, right, top, bottom]\n  )\n\n  const ref = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    ref.current.shift = lerp(ref.current.shift, (state.top.current - last) / 100, 0.1)\n    last = state.top.current\n  })\n\n  return (\n    <group {...props} scale={[size, size, 0.1]}>\n      <mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\n        <customMaterial ref={ref} attach=\"material\" color={color} transparent opacity={opacity} />\n      </mesh>\n    </group>\n  )\n}\n\nconst MultilineText = ({ text, size = 1, lineHeight = 1, position = [0, 0, 0], ...props }) =>\n  text.split(\"\\n\").map((text, index) => <Text key={index} size={size} {...props} position={[position[0], position[1] - index * lineHeight, position[2]]} children={text} />)\n\nexport { Text, MultilineText }\n","import { ShaderMaterial, Color } from \"three\"\nimport { extend } from \"react-three-fiber\"\n\nclass CustomMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `uniform float scale;\n      uniform float shift;\n      varying vec2 vUv;\n      void main() {\n        vec3 pos = position;\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 2.0) * 0.125);\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n      }`,\n      fragmentShader: `uniform sampler2D texture;\n      uniform float hasTexture;\n      uniform float shift;\n      uniform float scale;\n      uniform vec3 color;\n      uniform float opacity;\n      varying vec2 vUv;\n      void main() {\n        float angle = 1.55;\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\n        vec4 cr = texture2D(texture, p + offset);\n        vec4 cga = texture2D(texture, p);\n        vec4 cb = texture2D(texture, p - offset);\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        else gl_FragColor = vec4(color, opacity);\n      }`,\n      uniforms: {\n        texture: { value: null },\n        hasTexture: { value: 0 },\n        scale: { value: 0 },\n        shift: { value: 0 },\n        opacity: { value: 1 },\n        color: { value: new Color(\"white\") }\n      }\n    })\n  }\n\n  set scale(value) {\n    this.uniforms.scale.value = value\n  }\n\n  get scale() {\n    return this.uniforms.scale.value\n  }\n\n  set shift(value) {\n    this.uniforms.shift.value = value\n  }\n\n  get shift() {\n    return this.uniforms.shift.value\n  }\n\n  set map(value) {\n    this.uniforms.hasTexture.value = !!value\n    this.uniforms.texture.value = value\n  }\n\n  get map() {\n    return this.uniforms.texture.value\n  }\n\n  get color() {\n    return this.uniforms.color.value\n  }\n\n  get opacity() {\n    return this.uniforms.opacity.value\n  }\n\n  set opacity(value) {\n    if (this.uniforms) this.uniforms.opacity.value = value\n  }\n}\n\nextend({ CustomMaterial })\n","import React, { createContext, useRef, useContext } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\n\nconst offsetContext = createContext(0)\n\nfunction Block({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight } = useBlock()\n  const ref = useRef()\n  offset = offset !== undefined ? offset : parentOffset\n  useFrame(() => {\n    const curY = ref.current.position.y\n    const curTop = state.top.current\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n  })\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  )\n}\n\nfunction useBlock() {\n  const { sections, pages, zoom } = state\n  const { size, viewport } = useThree()\n  const offset = useContext(offsetContext)\n  const viewportWidth = viewport.width\n  const viewportHeight = viewport.height\n  const canvasWidth = viewportWidth / zoom\n  const canvasHeight = viewportHeight / zoom\n  const mobile = size.width < 700\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n  const offsetFactor = (offset + 1.0) / sections\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor\n  }\n}\n\nexport { Block, useBlock }\n","import React, { forwardRef, useRef } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport \"./CustomMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst Plane = forwardRef(({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }, ref) => {\n  const { viewportHeight, offsetFactor } = useBlock()\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n    material.current.shift = lerp(material.current.shift, (top.current - last) / shift, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh ref={ref} {...props}>\n      <planeBufferGeometry attach=\"geometry\" args={args} />\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} transparent opacity={opacity} />\n    </mesh>\n  )\n})\n\nexport default Plane\n","import ReactDOM from \"react-dom\"\nimport React, { Suspense, useEffect, useRef, useMemo, Fragment } from \"react\"\nimport { Canvas, Dom, useLoader, useFrame } from \"react-three-fiber\"\nimport { TextureLoader, LinearFilter } from \"three\"\nimport lerp from \"lerp\"\nimport { Text, MultilineText } from \"./components/Text\"\nimport Plane from \"./components/Plane\"\nimport { Block, useBlock } from \"./blocks\"\nimport state from \"./store\"\nimport \"./styles.css\"\n\nfunction Startup() {\n  const ref = useRef()\n  useFrame(() => (ref.current.material.opacity = lerp(ref.current.material.opacity, 0, 0.025)))\n  return <Plane ref={ref} color=\"#0e0e0f\" position={[0, 0, 200]} scale={[100, 100, 1]} />\n}\n\nfunction Paragraph({ image, index, offset, factor, header, aspect, text }) {\n  const { contentMaxWidth: w, canvasWidth, margin, mobile } = useBlock()\n  const size = aspect < 1 && !mobile ? 0.65 : 1\n  const alignRight = (canvasWidth - w * size - margin) / 2\n  const pixelWidth = w * state.zoom * size\n  const left = !(index % 2)\n  const color = index % 2 ? \"#D40749\" : \"#2FE8C3\"\n  return (\n    <Block factor={factor} offset={offset}>\n      <group position={[left ? -alignRight : alignRight, 0, 0]}>\n        <Plane map={image} args={[1, 1, 32, 32]} shift={75} size={size} aspect={aspect} scale={[w * size, (w * size) / aspect, 1]} frustumCulled={false} />\n        <Dom\n          style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: left ? \"left\" : \"right\" }}\n          position={[left || mobile ? (-w * size) / 2 : 0, (-w * size) / 2 / aspect - 0.4, 1]}>\n          <div tabIndex={index}>{text}</div>\n        </Dom>\n        <Text left={left} right={!left} size={w * 0.04} color={color} top position={[((left ? -w : w) * size) / 2, (w * size) / aspect / 2 + 0.5, -1]}>\n          {header}\n        </Text>\n        <Block factor={0.2}>\n          <Text opacity={0.5} size={w * 0.1} color=\"#1A1E2A\" position={[((left ? w : -w) / 2) * size, (w * size) / aspect / 1.5, -10]}>\n            {\"0\" + (index + 1)}\n          </Text>\n        </Block>\n      </group>\n    </Block>\n  )\n}\n\nfunction Content() {\n  const images = useLoader(TextureLoader, state.paragraphs.map(({ image }) => image))\n  useMemo(() => images.forEach(texture => (texture.minFilter = LinearFilter)), [images])\n  const { contentMaxWidth: w, canvasWidth, canvasHeight, mobile } = useBlock()\n  return (\n    <Fragment>\n      {/* --------------- Header --------------- */}\n      <Block factor={1} offset={0}>\n        <Block factor={1.2}>\n\n          {/* --------------- Name --------------- */}\n          <Text left size={w * 0.08} position={[-w / 2.8, 0.5, -1]} color=\"#d40749\">\n            PHILIPPE T.\n          </Text>\n          {/* --------------! Name !-------------- */}\n\n        </Block>\n        {/* --------------- SubTitle --------------- */}\n        <Block factor={1.0}>\n          <Dom position={[-w / 3.6, -w * 0.08 + 0.25, -1]}>And here is my portfolio.{mobile ? <br /> : \" \"}Eat. Sleep. Learn. Create.</Dom>\n        </Block>\n        {/* --------------! SubTitle !-------------- */}\n\n      </Block>\n      {/* --------------! Header !-------------- */}\n\n      {/* --------------- Paragraphs --------------- */}\n      {state.paragraphs.map((props, index) => (\n        <Paragraph key={index} index={index} {...props} image={images[index]} />\n      ))}\n      {/* --------------! Paragraphs !-------------- */}\n\n      \n      {state.stripes.map(({ offset, color, height }, index) => (\n        <Block key={index} factor={-1.5} offset={offset}>\n          <Plane args={[50, height, 32, 32]} shift={-4} color={color} rotation={[0, 0, Math.PI / 8]} position={[0, 0, -10]} />\n        </Block>\n      ))}\n\n      <Block factor={1.2} offset={3}>\n        <MultilineText top left size={w * 0.15} lineHeight={w / 4} position={[-w / 3, 1, -1]} color=\"#2fe8c3\" text={\"dream\\nBIG.\"} />\n      </Block>\n\n      {/* --------------- Footer --------------- */}\n      <Block factor={1.25} offset={3}>\n        <Dom className=\"bottom-left\" position={[-canvasWidth / 2, -canvasHeight / 2, 0]}>\n          Made with <i className=\"fa fa-heart\" style={{ color: '#D40749' }} /> by Philippe Talarico\n        </Dom>\n      </Block>\n    </Fragment>\n  )\n}\n\nfunction App() {\n  const scrollArea = useRef();\n  const onScroll = e => (state.top.current = e.target.scrollTop);\n  useEffect(() => void onScroll({ target: scrollArea.current }), []);\n\n  return (\n    <Fragment>\n      <Canvas concurrent pixelRatio={2} orthographic camera={{ zoom: state.zoom, position: [0, 0, 500] }}>\n        <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\n          <Content />\n          <Startup />\n        </Suspense>\n      </Canvas>\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}>\n        {new Array(state.sections).fill().map((_, index) => (\n          <div key={index} id={\"0\" + index} style={{ height: `${(state.pages / state.sections) * 100}vh` }} />\n        ))}\n      </div>\n    </Fragment>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}